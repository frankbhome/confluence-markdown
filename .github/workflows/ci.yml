name: CI

"on":
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  markdown-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Install markdownlint-cli2
        run: npm install -g markdownlint-cli2

      - name: Run markdownlint
        run: markdownlint-cli2 --config .markdownlint-cli2.jsonc "**/*.md"

  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: pipx install poetry

      - name: Install dependencies
        run: poetry install

      - name: Lint
        run: poetry run ruff check .

      - name: Type check
        run: poetry run mypy src

      - name: Tests
        run: |
          poetry run pytest --cov=src --cov=scripts --cov-branch \
            --cov-report=term-missing \
            --cov-report=xml \
            --cov-report=html \
            --cov-fail-under=80

      - name: Upload coverage reports to GitHub
        uses: actions/upload-artifact@v4
        if: always() && matrix.python-version == '3.12'
        with:
          name: coverage-reports-${{ matrix.python-version }}
          path: |
            coverage.xml
            htmlcov/
          retention-days: 30

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: matrix.python-version == '3.12'
        with:
          files: ./coverage.xml
          flags: unittests,py312
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Conversion Fidelity Check (CMD-44)
        run: poetry run pytest tests/test_conversion_fidelity.py -v

      - name: CLI Smoke Test
        run: poetry run conmd
